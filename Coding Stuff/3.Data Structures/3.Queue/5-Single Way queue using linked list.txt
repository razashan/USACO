#include<iostream>
#include<conio.h>
using namespace std;
struct Node
{
	int data;
	Node * next;
};
Node * head;
class Queue
{
	public:
		int top1;
		void insert();
		void del();
		void disp();
		Queue()
		{
			top1=0;
			head=NULL;
		}
};
int main()
{
	int ch;
	Queue d1;
	while(1)
	{
		cout<<"Operations are the Following "<<endl;
		cout<<"1.Insert Element into the Dequeue "<<endl;
		cout<<"2.Delete Element from the Dequeue "<<endl;
		cout<<"3.Traverse the Dequeue "<<endl;
		cout<<"4.Quit "<<endl;
		cout<<"Enter your choice ";
		cin>>ch;
		switch (ch)
		{
		case 1:
			d1.insert();
			break;
		case 2:
			d1.del();
			break;
		case 3:
			d1.disp();
			break;
		case 4:
			exit(1);
			break;

		default:
			cout<<"Wrong Choice "<<endl;
			
		}
	}
	system("pause");
}
void Queue::insert()
{
	struct Node * temp;
	int ch,value;
	if(top1>=50)
	{
		cout<<"Overflow ";
		return;
	}
	if(top1==0)
	{
		cout<<"Enter the value to insert ";
		cin>>value;
		head=new (struct Node);
		head->data=value;
		head->next=NULL;
		top1++;
		cout<<"Element is inserted in the empty space "<<endl;
	}
	else
	{
		cout<<"Enter the value to insert";
		cin>>value;
		temp=new (struct Node);
		temp->data=value;
		temp->next=head;
		head=temp;
		top1++;
	}
		
	
}
void Queue::del()
{
	if(top1<=0)
	{
		cout<<"Underflow ";
		return;
	}
	else
	{
		head=head->next;
		top1--;
	}
}
void Queue::disp()
{
	if(top1==0)
	{
		cout<<"Underflow ";
	}
	else
	{
		struct Node * temp;
		temp=head;
		while(temp!=NULL)
		{
			cout<<temp->data <<"   ";
			temp=temp->next;
		}
	}
}